{"ast":null,"code":"var _jsxFileName = \"/Users/danielrad/Desktop/QZ/Coding/Facultate/PS/StackUnderflow/frontend/src/pages/AskQuestionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { questionService } from '../services/api';\nimport { AuthContext } from '../services/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AskQuestionPage = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [tags, setTags] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const validateForm = () => {\n    if (!title.trim()) {\n      setError('Please provide a title for your question');\n      return false;\n    }\n    if (!text.trim()) {\n      setError('Please provide details for your question');\n      return false;\n    }\n    if (title.length < 15) {\n      setError('Title should be at least 15 characters long');\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      // Make sure currentUser exists and has an ID\n      if (!currentUser || !currentUser.id) {\n        setError('User session is invalid. Please log in again.');\n        setLoading(false);\n        return;\n      }\n      const response = await questionService.createQuestion(currentUser.id, title, text, imageUrl || \"\",\n      // Provide empty string as default\n      tags || \"\" // Provide empty string as default\n      );\n      if (response && response.data && response.data.id) {\n        // Use replace: true to prevent navigation issues if the user presses back\n        navigate(`/questions/${response.data.id}`, {\n          replace: true\n        });\n      } else {\n        // Handle case where response exists but doesn't have expected data\n        setError('Question was created but failed to get question details. Please check your questions list.');\n        setLoading(false);\n        setTimeout(() => navigate('/'), 2000); // Redirect to home after 2 seconds\n      }\n    } catch (err) {\n      console.error('Error posting question:', err);\n\n      // Extract more specific error message if available\n      let errorMessage = 'Failed to post your question. Please try again.';\n      if (err.response && err.response.data) {\n        if (typeof err.response.data === 'string') {\n          errorMessage = err.response.data;\n        } else if (err.response.data.error) {\n          errorMessage = err.response.data.error;\n        } else if (err.response.data.message) {\n          errorMessage = err.response.data.message;\n        }\n      } else if (err.message) {\n        errorMessage = err.message;\n      }\n      setError(errorMessage);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Ask a Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"questionTitle\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"e.g. How to implement authentication in a React application?\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Be specific and imagine you're asking a question to another person.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"questionText\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 10,\n          placeholder: \"Include all the information someone would need to answer your question\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Include all the details someone would need to answer your question.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"questionTags\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"e.g. java,spring,hibernate\",\n          value: tags,\n          onChange: e => setTags(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Add up to 5 tags to describe what your question is about. Separate tags with commas.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"questionImage\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image URL (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"url\",\n          placeholder: \"e.g. https://example.com/image.png\",\n          value: imageUrl,\n          onChange: e => setImageUrl(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Add an image URL if it helps illustrate your question.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Posting...' : 'Post Your Question'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(AskQuestionPage, \"4VYlIoHsGSAHR/Itlp1yPUf3vrw=\", false, function () {\n  return [useNavigate];\n});\n_c = AskQuestionPage;\nexport default AskQuestionPage;\nvar _c;\n$RefreshReg$(_c, \"AskQuestionPage\");","map":{"version":3,"names":["React","useState","useContext","Container","Form","Button","Alert","useNavigate","questionService","AuthContext","jsxDEV","_jsxDEV","AskQuestionPage","_s","title","setTitle","text","setText","tags","setTags","imageUrl","setImageUrl","error","setError","loading","setLoading","currentUser","navigate","validateForm","trim","length","handleSubmit","e","preventDefault","id","response","createQuestion","data","replace","setTimeout","err","console","errorMessage","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","disabled","Text","as","rows","_c","$RefreshReg$"],"sources":["/Users/danielrad/Desktop/QZ/Coding/Facultate/PS/StackUnderflow/frontend/src/pages/AskQuestionPage.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { questionService } from '../services/api';\nimport { AuthContext } from '../services/AuthContext';\n\nconst AskQuestionPage = () => {\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [tags, setTags] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  \n  const { currentUser } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const validateForm = () => {\n    if (!title.trim()) {\n      setError('Please provide a title for your question');\n      return false;\n    }\n    \n    if (!text.trim()) {\n      setError('Please provide details for your question');\n      return false;\n    }\n    \n    if (title.length < 15) {\n      setError('Title should be at least 15 characters long');\n      return false;\n    }\n    \n    return true;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    setLoading(true);\n    setError('');\n    \n    try {\n      // Make sure currentUser exists and has an ID\n      if (!currentUser || !currentUser.id) {\n        setError('User session is invalid. Please log in again.');\n        setLoading(false);\n        return;\n      }\n      \n      const response = await questionService.createQuestion(\n        currentUser.id,\n        title,\n        text,\n        imageUrl || \"\",  // Provide empty string as default\n        tags || \"\"       // Provide empty string as default\n      );\n      \n      if (response && response.data && response.data.id) {\n        // Use replace: true to prevent navigation issues if the user presses back\n        navigate(`/questions/${response.data.id}`, { replace: true });\n      } else {\n        // Handle case where response exists but doesn't have expected data\n        setError('Question was created but failed to get question details. Please check your questions list.');\n        setLoading(false);\n        setTimeout(() => navigate('/'), 2000); // Redirect to home after 2 seconds\n      }\n    } catch (err) {\n      console.error('Error posting question:', err);\n      \n      // Extract more specific error message if available\n      let errorMessage = 'Failed to post your question. Please try again.';\n      \n      if (err.response && err.response.data) {\n        if (typeof err.response.data === 'string') {\n          errorMessage = err.response.data;\n        } else if (err.response.data.error) {\n          errorMessage = err.response.data.error;\n        } else if (err.response.data.message) {\n          errorMessage = err.response.data.message;\n        }\n      } else if (err.message) {\n        errorMessage = err.message;\n      }\n      \n      setError(errorMessage);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container className=\"py-4\">\n      <h1 className=\"mb-4\">Ask a Question</h1>\n      \n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      \n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"questionTitle\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"e.g. How to implement authentication in a React application?\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            disabled={loading}\n          />\n          <Form.Text className=\"text-muted\">\n            Be specific and imagine you're asking a question to another person.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"questionText\">\n          <Form.Label>Body</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={10}\n            placeholder=\"Include all the information someone would need to answer your question\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            disabled={loading}\n          />\n          <Form.Text className=\"text-muted\">\n            Include all the details someone would need to answer your question.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"questionTags\">\n          <Form.Label>Tags</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"e.g. java,spring,hibernate\"\n            value={tags}\n            onChange={(e) => setTags(e.target.value)}\n            disabled={loading}\n          />\n          <Form.Text className=\"text-muted\">\n            Add up to 5 tags to describe what your question is about. Separate tags with commas.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"questionImage\">\n          <Form.Label>Image URL (Optional)</Form.Label>\n          <Form.Control\n            type=\"url\"\n            placeholder=\"e.g. https://example.com/image.png\"\n            value={imageUrl}\n            onChange={(e) => setImageUrl(e.target.value)}\n            disabled={loading}\n          />\n          <Form.Text className=\"text-muted\">\n            Add an image URL if it helps illustrate your question.\n          </Form.Text>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n          {loading ? 'Posting...' : 'Post Your Question'}\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default AskQuestionPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}