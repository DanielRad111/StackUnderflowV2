{"ast":null,"code":"var _jsxFileName = \"/Users/danielrad/Desktop/QZ/Coding/Facultate/PS/StackUnderflow/frontend/src/services/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { userService } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Helper function to normalize user data\n  const normalizeUserData = user => {\n    if (!user) return null;\n\n    // Create a new object to avoid reference issues\n    const normalizedUser = {\n      ...user\n    };\n\n    // Ensure both id and userId are present\n    if (normalizedUser.userId && !normalizedUser.id) {\n      normalizedUser.id = normalizedUser.userId;\n    } else if (normalizedUser.id && !normalizedUser.userId) {\n      normalizedUser.userId = normalizedUser.id;\n    }\n    return normalizedUser;\n  };\n  useEffect(() => {\n    // Check if user is stored in localStorage\n    const storedUser = localStorage.getItem('user');\n    console.log(\"Checking for stored user:\", storedUser ? \"Found\" : \"Not found\");\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        console.log(\"Parsed stored user:\", parsedUser);\n\n        // Normalize the user data\n        const normalizedUser = normalizeUserData(parsedUser);\n        console.log(\"Normalized user data:\", normalizedUser);\n        setCurrentUser(normalizedUser);\n      } catch (error) {\n        console.error(\"Error parsing stored user:\", error);\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      console.log(\"Attempting login for user:\", username);\n      const response = await userService.login(username, password);\n      console.log(\"Login response:\", response);\n      if (response.data === true) {\n        // Login successful, fetch user details\n        console.log(\"Login successful, fetching user details\");\n        const userResponse = await userService.getUserByUsername(username);\n        console.log(\"User details response:\", userResponse);\n\n        // Normalize user data\n        const normalizedUser = normalizeUserData(userResponse.data);\n        console.log(\"Normalized user data:\", normalizedUser);\n        setCurrentUser(normalizedUser);\n        localStorage.setItem('user', JSON.stringify(normalizedUser));\n        console.log(\"User stored in context and localStorage:\", normalizedUser);\n        return {\n          success: true,\n          user: normalizedUser\n        };\n      }\n      return {\n        success: false,\n        message: 'Invalid credentials'\n      };\n    } catch (error) {\n      console.error(\"Login error:\", error.response || error);\n      if (error.response && error.response.status === 403) {\n        return {\n          success: false,\n          message: error.response.data.message,\n          reason: error.response.data.reason\n        };\n      }\n      return {\n        success: false,\n        message: 'Login failed. Please try again.'\n      };\n    }\n  };\n  const register = async (username, email, password, phoneNumber) => {\n    try {\n      console.log(\"Attempting to register user:\", username);\n      const response = await userService.register(username, email, password, phoneNumber);\n      console.log(\"Register response:\", response);\n\n      // Normalize user data\n      const normalizedUser = normalizeUserData(response.data);\n      console.log(\"Normalized user data:\", normalizedUser);\n      setCurrentUser(normalizedUser);\n      localStorage.setItem('user', JSON.stringify(normalizedUser));\n      console.log(\"User stored in context and localStorage:\", normalizedUser);\n      return {\n        success: true,\n        user: normalizedUser\n      };\n    } catch (error) {\n      console.error(\"Registration error:\", error.response || error);\n      return {\n        success: false,\n        message: 'Registration failed. Please try again.'\n      };\n    }\n  };\n  const logout = () => {\n    console.log(\"Logging out user\");\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n  };\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!currentUser,\n    isModerator: currentUser ? currentUser.isModerator : false\n  };\n  console.log(\"Auth context current state:\", {\n    isAuthenticated: !!currentUser,\n    isModerator: currentUser ? currentUser.isModerator : false,\n    userId: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) || (currentUser === null || currentUser === void 0 ? void 0 : currentUser.userId)\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","userService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","normalizeUserData","user","normalizedUser","userId","id","storedUser","localStorage","getItem","console","log","parsedUser","JSON","parse","error","removeItem","login","username","password","response","data","userResponse","getUserByUsername","setItem","stringify","success","message","status","reason","register","email","phoneNumber","logout","value","isAuthenticated","isModerator","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danielrad/Desktop/QZ/Coding/Facultate/PS/StackUnderflow/frontend/src/services/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { userService } from './api';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Helper function to normalize user data\n  const normalizeUserData = (user) => {\n    if (!user) return null;\n    \n    // Create a new object to avoid reference issues\n    const normalizedUser = { ...user };\n    \n    // Ensure both id and userId are present\n    if (normalizedUser.userId && !normalizedUser.id) {\n      normalizedUser.id = normalizedUser.userId;\n    } else if (normalizedUser.id && !normalizedUser.userId) {\n      normalizedUser.userId = normalizedUser.id;\n    }\n    \n    return normalizedUser;\n  };\n\n  useEffect(() => {\n    // Check if user is stored in localStorage\n    const storedUser = localStorage.getItem('user');\n    console.log(\"Checking for stored user:\", storedUser ? \"Found\" : \"Not found\");\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        console.log(\"Parsed stored user:\", parsedUser);\n        \n        // Normalize the user data\n        const normalizedUser = normalizeUserData(parsedUser);\n        console.log(\"Normalized user data:\", normalizedUser);\n        \n        setCurrentUser(normalizedUser);\n      } catch (error) {\n        console.error(\"Error parsing stored user:\", error);\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      console.log(\"Attempting login for user:\", username);\n      const response = await userService.login(username, password);\n      console.log(\"Login response:\", response);\n      if (response.data === true) {\n        // Login successful, fetch user details\n        console.log(\"Login successful, fetching user details\");\n        const userResponse = await userService.getUserByUsername(username);\n        console.log(\"User details response:\", userResponse);\n        \n        // Normalize user data\n        const normalizedUser = normalizeUserData(userResponse.data);\n        console.log(\"Normalized user data:\", normalizedUser);\n        \n        setCurrentUser(normalizedUser);\n        localStorage.setItem('user', JSON.stringify(normalizedUser));\n        console.log(\"User stored in context and localStorage:\", normalizedUser);\n        return { success: true, user: normalizedUser };\n      }\n      return { success: false, message: 'Invalid credentials' };\n    } catch (error) {\n      console.error(\"Login error:\", error.response || error);\n      if (error.response && error.response.status === 403) {\n        return { success: false, message: error.response.data.message, reason: error.response.data.reason };\n      }\n      return { success: false, message: 'Login failed. Please try again.' };\n    }\n  };\n\n  const register = async (username, email, password, phoneNumber) => {\n    try {\n      console.log(\"Attempting to register user:\", username);\n      const response = await userService.register(username, email, password, phoneNumber);\n      console.log(\"Register response:\", response);\n      \n      // Normalize user data\n      const normalizedUser = normalizeUserData(response.data);\n      console.log(\"Normalized user data:\", normalizedUser);\n      \n      setCurrentUser(normalizedUser);\n      localStorage.setItem('user', JSON.stringify(normalizedUser));\n      console.log(\"User stored in context and localStorage:\", normalizedUser);\n      return { success: true, user: normalizedUser };\n    } catch (error) {\n      console.error(\"Registration error:\", error.response || error);\n      return { success: false, message: 'Registration failed. Please try again.' };\n    }\n  };\n\n  const logout = () => {\n    console.log(\"Logging out user\");\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n  };\n\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!currentUser,\n    isModerator: currentUser ? currentUser.isModerator : false\n  };\n\n  console.log(\"Auth context current state:\", {\n    isAuthenticated: !!currentUser,\n    isModerator: currentUser ? currentUser.isModerator : false,\n    userId: currentUser?.id || currentUser?.userId\n  });\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}