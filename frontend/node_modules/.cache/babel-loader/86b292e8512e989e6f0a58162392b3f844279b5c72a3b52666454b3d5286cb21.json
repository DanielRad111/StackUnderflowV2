{"ast":null,"code":"import axios from 'axios';\nconst API_URL = ''; // Empty since we've set up proxy in package.json\n\n// Add request interceptor\naxios.interceptors.request.use(request => {\n  console.log('API Request:', {\n    url: request.url,\n    method: request.method,\n    data: request.data,\n    params: request.params\n  });\n  return request;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor\naxios.interceptors.response.use(response => {\n  console.log('API Response:', {\n    url: response.config.url,\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  console.error('Response error:', error.config ? {\n    url: error.config.url,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n  } : error);\n  return Promise.reject(error);\n});\n\n// User related API calls\nexport const userService = {\n  login: (username, password) => axios.post(`${API_URL}/users/login`, {\n    username,\n    password\n  }),\n  register: (username, email, password, phoneNumber) => axios.post(`${API_URL}/users/create`, {\n    username,\n    email,\n    password,\n    phoneNumber\n  }),\n  getUserById: id => axios.get(`${API_URL}/users/id/${id}`),\n  getUserByUsername: username => axios.get(`${API_URL}/users/username/${username}`),\n  updateUser: (id, data) => axios.put(`${API_URL}/users/${id}`, data),\n  getAllUsers: () => axios.get(`${API_URL}/users/all`)\n};\n\n// Question related API calls\nexport const questionService = {\n  getAllQuestions: () => axios.get(`${API_URL}/questions/all`),\n  getQuestionById: id => axios.get(`${API_URL}/questions/find/${id}`),\n  getQuestionsByAuthor: authorId => axios.get(`${API_URL}/questions/author/${authorId}`),\n  getQuestionsByTag: tagName => axios.get(`${API_URL}/questions/tag/${tagName}`),\n  getQuestionsByStatus: status => axios.get(`${API_URL}/questions/status/${status}`),\n  searchQuestions: keyword => axios.get(`${API_URL}/questions/search?keyword=${keyword}`),\n  createQuestion: (authorId, title, text, image, tags) => axios.post(`${API_URL}/questions/create`, {\n    authorId,\n    title,\n    text,\n    image,\n    tags\n  }),\n  updateQuestion: (id, data, userId) => axios.put(`${API_URL}/questions/update/${id}?userId=${userId}`, data),\n  acceptAnswer: (questionId, answerId) => axios.put(`${API_URL}/questions/${questionId}/accept/${answerId}`),\n  deleteQuestion: (id, userId) => axios.delete(`${API_URL}/questions/delete/${id}?userId=${userId}`)\n};\n\n// Answer related API calls\nexport const answerService = {\n  getAnswersByQuestion: questionId => axios.get(`${API_URL}/answers/question/${questionId}`),\n  createAnswer: (authorId, questionId, text, code) => axios.post(`${API_URL}/answers/create`, {\n    authorId,\n    questionId,\n    text,\n    code\n  }),\n  updateAnswer: (id, data, userId) => axios.put(`${API_URL}/answers/update/${id}?userId=${userId}`, data),\n  deleteAnswer: (id, userId) => axios.delete(`${API_URL}/answers/delete/${id}?userId=${userId}`)\n};\n\n// Vote related API calls\nexport const voteService = {\n  voteQuestion: (userId, questionId, voteType) => axios.post(`${API_URL}/votes/question`, {\n    userId,\n    questionId,\n    voteType\n  }),\n  voteAnswer: (userId, answerId, voteType) => axios.post(`${API_URL}/votes/answer`, {\n    userId,\n    answerId,\n    voteType\n  })\n};\n\n// Tag related API calls\nexport const tagService = {\n  getAllTags: () => axios.get(`${API_URL}/tags/all`),\n  getTagByName: name => axios.get(`${API_URL}/tags/${name}`)\n};","map":{"version":3,"names":["axios","API_URL","interceptors","request","use","console","log","url","method","data","params","error","Promise","reject","response","config","status","_error$response","_error$response2","userService","login","username","password","post","register","email","phoneNumber","getUserById","id","get","getUserByUsername","updateUser","put","getAllUsers","questionService","getAllQuestions","getQuestionById","getQuestionsByAuthor","authorId","getQuestionsByTag","tagName","getQuestionsByStatus","searchQuestions","keyword","createQuestion","title","text","image","tags","updateQuestion","userId","acceptAnswer","questionId","answerId","deleteQuestion","delete","answerService","getAnswersByQuestion","createAnswer","code","updateAnswer","deleteAnswer","voteService","voteQuestion","voteType","voteAnswer","tagService","getAllTags","getTagByName","name"],"sources":["/Users/danielrad/Desktop/QZ/Coding/Facultate/PS/StackUnderflow/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = '';  // Empty since we've set up proxy in package.json\n\n// Add request interceptor\naxios.interceptors.request.use(request => {\n  console.log('API Request:', {\n    url: request.url,\n    method: request.method,\n    data: request.data,\n    params: request.params\n  });\n  return request;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor\naxios.interceptors.response.use(response => {\n  console.log('API Response:', {\n    url: response.config.url,\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, error => {\n  console.error('Response error:', error.config ? {\n    url: error.config.url,\n    status: error.response?.status,\n    data: error.response?.data\n  } : error);\n  return Promise.reject(error);\n});\n\n// User related API calls\nexport const userService = {\n  login: (username, password) => axios.post(`${API_URL}/users/login`, { username, password }),\n  register: (username, email, password, phoneNumber) => axios.post(`${API_URL}/users/create`, { username, email, password, phoneNumber }),\n  getUserById: (id) => axios.get(`${API_URL}/users/id/${id}`),\n  getUserByUsername: (username) => axios.get(`${API_URL}/users/username/${username}`),\n  updateUser: (id, data) => axios.put(`${API_URL}/users/${id}`, data),\n  getAllUsers: () => axios.get(`${API_URL}/users/all`)\n};\n\n// Question related API calls\nexport const questionService = {\n  getAllQuestions: () => axios.get(`${API_URL}/questions/all`),\n  getQuestionById: (id) => axios.get(`${API_URL}/questions/find/${id}`),\n  getQuestionsByAuthor: (authorId) => axios.get(`${API_URL}/questions/author/${authorId}`),\n  getQuestionsByTag: (tagName) => axios.get(`${API_URL}/questions/tag/${tagName}`),\n  getQuestionsByStatus: (status) => axios.get(`${API_URL}/questions/status/${status}`),\n  searchQuestions: (keyword) => axios.get(`${API_URL}/questions/search?keyword=${keyword}`),\n  createQuestion: (authorId, title, text, image, tags) => \n    axios.post(`${API_URL}/questions/create`, { authorId, title, text, image, tags }),\n  updateQuestion: (id, data, userId) => axios.put(`${API_URL}/questions/update/${id}?userId=${userId}`, data),\n  acceptAnswer: (questionId, answerId) => axios.put(`${API_URL}/questions/${questionId}/accept/${answerId}`),\n  deleteQuestion: (id, userId) => axios.delete(`${API_URL}/questions/delete/${id}?userId=${userId}`)\n};\n\n// Answer related API calls\nexport const answerService = {\n  getAnswersByQuestion: (questionId) => axios.get(`${API_URL}/answers/question/${questionId}`),\n  createAnswer: (authorId, questionId, text, code) => \n    axios.post(`${API_URL}/answers/create`, { authorId, questionId, text, code }),\n  updateAnswer: (id, data, userId) => axios.put(`${API_URL}/answers/update/${id}?userId=${userId}`, data),\n  deleteAnswer: (id, userId) => axios.delete(`${API_URL}/answers/delete/${id}?userId=${userId}`)\n};\n\n// Vote related API calls\nexport const voteService = {\n  voteQuestion: (userId, questionId, voteType) => \n    axios.post(`${API_URL}/votes/question`, { userId, questionId, voteType }),\n  voteAnswer: (userId, answerId, voteType) => \n    axios.post(`${API_URL}/votes/answer`, { userId, answerId, voteType })\n};\n\n// Tag related API calls\nexport const tagService = {\n  getAllTags: () => axios.get(`${API_URL}/tags/all`),\n  getTagByName: (name) => axios.get(`${API_URL}/tags/${name}`)\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}