{"ast":null,"code":"var _jsxFileName = \"/Users/danielrad/Desktop/QZ/Coding/Facultate/PS/StackUnderflow/frontend/src/services/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { userService } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is stored in localStorage\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setCurrentUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await userService.login(username, password);\n      if (response.data === true) {\n        // Login successful, fetch user details\n        const userResponse = await userService.getUserByUsername(username);\n        const user = userResponse.data;\n        setCurrentUser(user);\n        localStorage.setItem('user', JSON.stringify(user));\n        return {\n          success: true,\n          user\n        };\n      }\n      return {\n        success: false,\n        message: 'Invalid credentials'\n      };\n    } catch (error) {\n      if (error.response && error.response.status === 403) {\n        return {\n          success: false,\n          message: error.response.data.message,\n          reason: error.response.data.reason\n        };\n      }\n      return {\n        success: false,\n        message: 'Login failed. Please try again.'\n      };\n    }\n  };\n  const register = async (username, email, password, phoneNumber) => {\n    try {\n      const response = await userService.register(username, email, password, phoneNumber);\n      const user = response.data;\n      setCurrentUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: 'Registration failed. Please try again.'\n      };\n    }\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n  };\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!currentUser,\n    isModerator: currentUser ? currentUser.isModerator : false\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","userService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","storedUser","localStorage","getItem","JSON","parse","login","username","password","response","data","userResponse","getUserByUsername","user","setItem","stringify","success","message","error","status","reason","register","email","phoneNumber","logout","removeItem","value","isAuthenticated","isModerator","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danielrad/Desktop/QZ/Coding/Facultate/PS/StackUnderflow/frontend/src/services/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { userService } from './api';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is stored in localStorage\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setCurrentUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const response = await userService.login(username, password);\n      if (response.data === true) {\n        // Login successful, fetch user details\n        const userResponse = await userService.getUserByUsername(username);\n        const user = userResponse.data;\n        setCurrentUser(user);\n        localStorage.setItem('user', JSON.stringify(user));\n        return { success: true, user };\n      }\n      return { success: false, message: 'Invalid credentials' };\n    } catch (error) {\n      if (error.response && error.response.status === 403) {\n        return { success: false, message: error.response.data.message, reason: error.response.data.reason };\n      }\n      return { success: false, message: 'Login failed. Please try again.' };\n    }\n  };\n\n  const register = async (username, email, password, phoneNumber) => {\n    try {\n      const response = await userService.register(username, email, password, phoneNumber);\n      const user = response.data;\n      setCurrentUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      return { success: true, user };\n    } catch (error) {\n      return { success: false, message: 'Registration failed. Please try again.' };\n    }\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n  };\n\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!currentUser,\n    isModerator: currentUser ? currentUser.isModerator : false\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}