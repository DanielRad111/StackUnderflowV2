{"ast":null,"code":"var _jsxFileName = \"/Users/danielrad/Desktop/QZ/Coding/Facultate/PS/StackUnderflow/frontend/src/pages/TestAnswerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Container, Form, Button, Alert, Card, Badge } from 'react-bootstrap';\nimport { answerService, questionService, userService } from '../services/api';\nimport { AuthContext } from '../services/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestAnswerPage = () => {\n  _s();\n  const {\n    currentUser,\n    isAuthenticated\n  } = useContext(AuthContext);\n  const [questionId, setQuestionId] = useState('');\n  const [userId, setUserId] = useState('');\n  const [text, setText] = useState('Test answer');\n  const [image, setImage] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [userDetails, setUserDetails] = useState(null);\n  const [questionDetails, setQuestionDetails] = useState(null);\n  const [apiErrors, setApiErrors] = useState({});\n  const [debugResult, setDebugResult] = useState(null);\n\n  // Auto-fill user ID if logged in\n  useEffect(() => {\n    if (isAuthenticated && currentUser) {\n      const id = currentUser.id || currentUser.userId;\n      if (id) {\n        setUserId(String(id));\n        console.log(\"Set user ID from current user:\", id);\n      }\n    }\n  }, [currentUser, isAuthenticated]);\n  const validateQuestionId = async () => {\n    if (!questionId) return false;\n    try {\n      setApiErrors(prev => ({\n        ...prev,\n        questionId: null\n      }));\n      const response = await questionService.getQuestionById(questionId);\n      setQuestionDetails(response.data);\n      console.log(\"Question details:\", response.data);\n      return true;\n    } catch (err) {\n      setApiErrors(prev => ({\n        ...prev,\n        questionId: `Error: ${err.message}. Question ID ${questionId} not found.`\n      }));\n      setQuestionDetails(null);\n      return false;\n    }\n  };\n  const validateUserId = async () => {\n    if (!userId) return false;\n    try {\n      setApiErrors(prev => ({\n        ...prev,\n        userId: null\n      }));\n      const response = await userService.getUserById(userId);\n      setUserDetails(response.data);\n      console.log(\"User details:\", response.data);\n      return true;\n    } catch (err) {\n      setApiErrors(prev => ({\n        ...prev,\n        userId: `Error: ${err.message}. User ID ${userId} not found.`\n      }));\n      setUserDetails(null);\n      return false;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    setApiErrors({});\n\n    // Validate both IDs first\n    const isQuestionValid = await validateQuestionId();\n    const isUserValid = await validateUserId();\n    if (!isQuestionValid || !isUserValid) {\n      setLoading(false);\n      return;\n    }\n    try {\n      // Try direct API call to isolate the issue\n      const payload = {\n        id: questionId,\n        authorId: userId,\n        text: text,\n        image: image || \"\"\n      };\n      console.log(\"API Request payload:\", payload);\n      console.log(\"Testing IDs:\", {\n        questionId: {\n          value: questionId,\n          type: typeof questionId,\n          asNumber: Number(questionId),\n          isNaN: isNaN(Number(questionId))\n        },\n        userId: {\n          value: userId,\n          type: typeof userId,\n          asNumber: Number(userId),\n          isNaN: isNaN(Number(userId))\n        }\n      });\n      const response = await fetch('http://localhost:8080/answers/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        let errorText = await response.text();\n        try {\n          // Try to parse JSON error response\n          const errorJson = JSON.parse(errorText);\n          errorText = JSON.stringify(errorJson, null, 2);\n        } catch (e) {\n          // If not JSON, keep as text\n        }\n        throw new Error(`Server responded with ${response.status}: ${errorText}`);\n      }\n      const data = await response.json();\n      setResult(data);\n      console.log('Success:', data);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleServiceCall = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    setApiErrors({});\n\n    // Validate both IDs first\n    const isQuestionValid = await validateQuestionId();\n    const isUserValid = await validateUserId();\n    if (!isQuestionValid || !isUserValid) {\n      setLoading(false);\n      return;\n    }\n    try {\n      console.log(\"Test answer with service params:\", {\n        userId,\n        questionId,\n        text,\n        image\n      });\n\n      // Test using the service\n      const response = await answerService.createAnswer(userId, questionId, text, image);\n      setResult(response.data);\n      console.log('Success:', response.data);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDebug = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    setDebugResult(null);\n    try {\n      const payload = {\n        id: questionId,\n        authorId: userId,\n        text: text,\n        image: image || \"\"\n      };\n      console.log(\"Debug request payload:\", payload);\n      const response = await fetch('http://localhost:8080/answers/debug', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      setDebugResult(data);\n      console.log('Debug response:', data);\n\n      // Set errors based on debug results\n      const newApiErrors = {};\n      if (data.idError) {\n        newApiErrors.questionId = data.idError;\n      }\n      if (data.authorIdError) {\n        newApiErrors.userId = data.authorIdError;\n      }\n      if (data.textError) {\n        newApiErrors.text = data.textError;\n      }\n      setApiErrors(newApiErrors);\n    } catch (err) {\n      setError(`Debug failed: ${err.message}`);\n      console.error('Error debugging:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"py-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test Answer Creation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      children: \"This page helps diagnose issues with creating answers.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: \"Answer created successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: questionId,\n          onChange: e => setQuestionId(e.target.value),\n          placeholder: \"Enter question ID\",\n          isInvalid: !!apiErrors.questionId,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), apiErrors.questionId && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: apiErrors.questionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), questionDetails && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          className: \"mt-2\",\n          children: [\"Question found: \", questionDetails.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          size: \"sm\",\n          className: \"mt-2\",\n          onClick: validateQuestionId,\n          children: \"Validate Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"User ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: userId,\n          onChange: e => setUserId(e.target.value),\n          placeholder: \"Enter user ID\",\n          isInvalid: !!apiErrors.userId,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), apiErrors.userId && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: apiErrors.userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), userDetails && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          className: \"mt-2\",\n          children: [\"User found: \", userDetails.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          size: \"sm\",\n          className: \"mt-2\",\n          onClick: validateUserId,\n          children: \"Validate User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Answer Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter answer text\",\n          isInvalid: !!apiErrors.text,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), apiErrors.text && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: apiErrors.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: image,\n          onChange: e => setImage(e.target.value),\n          placeholder: \"Enter image URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          disabled: loading,\n          className: \"me-2\",\n          children: loading ? 'Submitting...' : 'Test with Fetch'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleServiceCall,\n          disabled: loading,\n          className: \"me-2\",\n          children: loading ? 'Submitting...' : 'Test with Service'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: handleDebug,\n          disabled: loading,\n          children: loading ? 'Debugging...' : 'Debug Parameters'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"border p-3 bg-light\",\n        children: JSON.stringify(result, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"User ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 20\n              }, this), \" \", (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) || (currentUser === null || currentUser === void 0 ? void 0 : currentUser.userId)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Username:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 20\n              }, this), \" \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"border p-2 bg-light\",\n              children: JSON.stringify(currentUser, null, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Not authenticated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), debugResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Debug Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: debugResult.wouldSucceed ? \"success\" : \"danger\",\n        children: debugResult.wouldSucceed ? \"Parameters are valid, answer creation should succeed\" : \"Parameters are invalid, answer creation would fail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"border p-3 bg-light\",\n        children: JSON.stringify(debugResult, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(TestAnswerPage, \"Ts36Ig+2IgNas6ikvYfDK86YHGk=\");\n_c = TestAnswerPage;\nexport default TestAnswerPage;\nvar _c;\n$RefreshReg$(_c, \"TestAnswerPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Container","Form","Button","Alert","Card","Badge","answerService","questionService","userService","AuthContext","jsxDEV","_jsxDEV","TestAnswerPage","_s","currentUser","isAuthenticated","questionId","setQuestionId","userId","setUserId","text","setText","image","setImage","result","setResult","error","setError","loading","setLoading","userDetails","setUserDetails","questionDetails","setQuestionDetails","apiErrors","setApiErrors","debugResult","setDebugResult","id","String","console","log","validateQuestionId","prev","response","getQuestionById","data","err","message","validateUserId","getUserById","handleSubmit","e","preventDefault","isQuestionValid","isUserValid","payload","authorId","value","type","asNumber","Number","isNaN","fetch","method","headers","body","JSON","stringify","ok","errorText","errorJson","parse","Error","status","json","handleServiceCall","createAnswer","handleDebug","newApiErrors","idError","authorIdError","textError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","Label","Control","onChange","target","placeholder","isInvalid","required","Feedback","title","size","onClick","username","as","rows","disabled","Body","wouldSucceed","_c","$RefreshReg$"],"sources":["/Users/danielrad/Desktop/QZ/Coding/Facultate/PS/StackUnderflow/frontend/src/pages/TestAnswerPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Container, Form, Button, Alert, Card, Badge } from 'react-bootstrap';\nimport { answerService, questionService, userService } from '../services/api';\nimport { AuthContext } from '../services/AuthContext';\n\nconst TestAnswerPage = () => {\n  const { currentUser, isAuthenticated } = useContext(AuthContext);\n  const [questionId, setQuestionId] = useState('');\n  const [userId, setUserId] = useState('');\n  const [text, setText] = useState('Test answer');\n  const [image, setImage] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [userDetails, setUserDetails] = useState(null);\n  const [questionDetails, setQuestionDetails] = useState(null);\n  const [apiErrors, setApiErrors] = useState({});\n  const [debugResult, setDebugResult] = useState(null);\n\n  // Auto-fill user ID if logged in\n  useEffect(() => {\n    if (isAuthenticated && currentUser) {\n      const id = currentUser.id || currentUser.userId;\n      if (id) {\n        setUserId(String(id));\n        console.log(\"Set user ID from current user:\", id);\n      }\n    }\n  }, [currentUser, isAuthenticated]);\n\n  const validateQuestionId = async () => {\n    if (!questionId) return false;\n    \n    try {\n      setApiErrors(prev => ({ ...prev, questionId: null }));\n      const response = await questionService.getQuestionById(questionId);\n      setQuestionDetails(response.data);\n      console.log(\"Question details:\", response.data);\n      return true;\n    } catch (err) {\n      setApiErrors(prev => ({ \n        ...prev, \n        questionId: `Error: ${err.message}. Question ID ${questionId} not found.` \n      }));\n      setQuestionDetails(null);\n      return false;\n    }\n  };\n\n  const validateUserId = async () => {\n    if (!userId) return false;\n    \n    try {\n      setApiErrors(prev => ({ ...prev, userId: null }));\n      const response = await userService.getUserById(userId);\n      setUserDetails(response.data);\n      console.log(\"User details:\", response.data);\n      return true;\n    } catch (err) {\n      setApiErrors(prev => ({ \n        ...prev, \n        userId: `Error: ${err.message}. User ID ${userId} not found.` \n      }));\n      setUserDetails(null);\n      return false;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    setApiErrors({});\n\n    // Validate both IDs first\n    const isQuestionValid = await validateQuestionId();\n    const isUserValid = await validateUserId();\n\n    if (!isQuestionValid || !isUserValid) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // Try direct API call to isolate the issue\n      const payload = {\n        id: questionId,\n        authorId: userId,\n        text: text,\n        image: image || \"\"\n      };\n\n      console.log(\"API Request payload:\", payload);\n      console.log(\"Testing IDs:\", {\n        questionId: { \n          value: questionId, \n          type: typeof questionId, \n          asNumber: Number(questionId),\n          isNaN: isNaN(Number(questionId))\n        },\n        userId: { \n          value: userId, \n          type: typeof userId, \n          asNumber: Number(userId),\n          isNaN: isNaN(Number(userId))\n        }\n      });\n\n      const response = await fetch('http://localhost:8080/answers/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        let errorText = await response.text();\n        try {\n          // Try to parse JSON error response\n          const errorJson = JSON.parse(errorText);\n          errorText = JSON.stringify(errorJson, null, 2);\n        } catch (e) {\n          // If not JSON, keep as text\n        }\n        throw new Error(`Server responded with ${response.status}: ${errorText}`);\n      }\n\n      const data = await response.json();\n      setResult(data);\n      console.log('Success:', data);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleServiceCall = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    setApiErrors({});\n\n    // Validate both IDs first\n    const isQuestionValid = await validateQuestionId();\n    const isUserValid = await validateUserId();\n\n    if (!isQuestionValid || !isUserValid) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      console.log(\"Test answer with service params:\", {\n        userId,\n        questionId,\n        text,\n        image\n      });\n      \n      // Test using the service\n      const response = await answerService.createAnswer(userId, questionId, text, image);\n      setResult(response.data);\n      console.log('Success:', response.data);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDebug = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    setDebugResult(null);\n    \n    try {\n      const payload = {\n        id: questionId,\n        authorId: userId,\n        text: text,\n        image: image || \"\"\n      };\n      \n      console.log(\"Debug request payload:\", payload);\n      \n      const response = await fetch('http://localhost:8080/answers/debug', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload)\n      });\n      \n      const data = await response.json();\n      setDebugResult(data);\n      console.log('Debug response:', data);\n      \n      // Set errors based on debug results\n      const newApiErrors = {};\n      if (data.idError) {\n        newApiErrors.questionId = data.idError;\n      }\n      if (data.authorIdError) {\n        newApiErrors.userId = data.authorIdError;\n      }\n      if (data.textError) {\n        newApiErrors.text = data.textError;\n      }\n      \n      setApiErrors(newApiErrors);\n    } catch (err) {\n      setError(`Debug failed: ${err.message}`);\n      console.error('Error debugging:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container className=\"py-5\">\n      <h1>Test Answer Creation</h1>\n      \n      <Alert variant=\"info\">\n        This page helps diagnose issues with creating answers.\n      </Alert>\n      \n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      {result && <Alert variant=\"success\">Answer created successfully!</Alert>}\n      \n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Question ID</Form.Label>\n          <Form.Control \n            type=\"text\" \n            value={questionId} \n            onChange={(e) => setQuestionId(e.target.value)}\n            placeholder=\"Enter question ID\" \n            isInvalid={!!apiErrors.questionId}\n            required\n          />\n          {apiErrors.questionId && (\n            <Form.Control.Feedback type=\"invalid\">\n              {apiErrors.questionId}\n            </Form.Control.Feedback>\n          )}\n          {questionDetails && (\n            <Alert variant=\"success\" className=\"mt-2\">\n              Question found: {questionDetails.title}\n            </Alert>\n          )}\n          <Button \n            variant=\"outline-secondary\" \n            size=\"sm\" \n            className=\"mt-2\"\n            onClick={validateQuestionId}\n          >\n            Validate Question\n          </Button>\n        </Form.Group>\n        \n        <Form.Group className=\"mb-3\">\n          <Form.Label>User ID</Form.Label>\n          <Form.Control \n            type=\"text\" \n            value={userId} \n            onChange={(e) => setUserId(e.target.value)}\n            placeholder=\"Enter user ID\" \n            isInvalid={!!apiErrors.userId}\n            required\n          />\n          {apiErrors.userId && (\n            <Form.Control.Feedback type=\"invalid\">\n              {apiErrors.userId}\n            </Form.Control.Feedback>\n          )}\n          {userDetails && (\n            <Alert variant=\"success\" className=\"mt-2\">\n              User found: {userDetails.username}\n            </Alert>\n          )}\n          <Button \n            variant=\"outline-secondary\" \n            size=\"sm\" \n            className=\"mt-2\"\n            onClick={validateUserId}\n          >\n            Validate User\n          </Button>\n        </Form.Group>\n        \n        <Form.Group className=\"mb-3\">\n          <Form.Label>Answer Text</Form.Label>\n          <Form.Control \n            as=\"textarea\" \n            rows={3} \n            value={text} \n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter answer text\" \n            isInvalid={!!apiErrors.text}\n            required\n          />\n          {apiErrors.text && (\n            <Form.Control.Feedback type=\"invalid\">\n              {apiErrors.text}\n            </Form.Control.Feedback>\n          )}\n        </Form.Group>\n        \n        <Form.Group className=\"mb-3\">\n          <Form.Label>Image (Optional)</Form.Label>\n          <Form.Control \n            type=\"text\" \n            value={image} \n            onChange={(e) => setImage(e.target.value)}\n            placeholder=\"Enter image URL\" \n          />\n        </Form.Group>\n        \n        <div className=\"d-flex\">\n          <Button \n            variant=\"primary\" \n            type=\"submit\" \n            disabled={loading}\n            className=\"me-2\"\n          >\n            {loading ? 'Submitting...' : 'Test with Fetch'}\n          </Button>\n          \n          <Button \n            variant=\"secondary\" \n            onClick={handleServiceCall} \n            disabled={loading}\n            className=\"me-2\"\n          >\n            {loading ? 'Submitting...' : 'Test with Service'}\n          </Button>\n          \n          <Button \n            variant=\"info\" \n            onClick={handleDebug} \n            disabled={loading}\n          >\n            {loading ? 'Debugging...' : 'Debug Parameters'}\n          </Button>\n        </div>\n      </Form>\n      \n      {result && (\n        <div className=\"mt-4\">\n          <h3>Response:</h3>\n          <pre className=\"border p-3 bg-light\">{JSON.stringify(result, null, 2)}</pre>\n        </div>\n      )}\n\n      <div className=\"mt-5\">\n        <h3>Current User</h3>\n        <Card className=\"mb-4\">\n          <Card.Body>\n            {isAuthenticated ? (\n              <div>\n                <p><strong>User ID:</strong> {currentUser?.id || currentUser?.userId}</p>\n                <p><strong>Username:</strong> {currentUser?.username}</p>\n                <pre className=\"border p-2 bg-light\">{JSON.stringify(currentUser, null, 2)}</pre>\n              </div>\n            ) : (\n              <p>Not authenticated</p>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n\n      {debugResult && (\n        <div className=\"mt-4\">\n          <h3>Debug Results:</h3>\n          <Alert variant={debugResult.wouldSucceed ? \"success\" : \"danger\"}>\n            {debugResult.wouldSucceed \n              ? \"Parameters are valid, answer creation should succeed\" \n              : \"Parameters are invalid, answer creation would fail\"}\n          </Alert>\n          <pre className=\"border p-3 bg-light\">{JSON.stringify(debugResult, null, 2)}</pre>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default TestAnswerPage; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,SAAS,EAAEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAC7E,SAASC,aAAa,EAAEC,eAAe,EAAEC,WAAW,QAAQ,iBAAiB;AAC7E,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,WAAW;IAAEC;EAAgB,CAAC,GAAGhB,UAAU,CAACU,WAAW,CAAC;EAChE,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,aAAa,CAAC;EAC/C,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC+B,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACmC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACqC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACuC,WAAW,EAAEC,cAAc,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIiB,eAAe,IAAID,WAAW,EAAE;MAClC,MAAMwB,EAAE,GAAGxB,WAAW,CAACwB,EAAE,IAAIxB,WAAW,CAACI,MAAM;MAC/C,IAAIoB,EAAE,EAAE;QACNnB,SAAS,CAACoB,MAAM,CAACD,EAAE,CAAC,CAAC;QACrBE,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEH,EAAE,CAAC;MACnD;IACF;EACF,CAAC,EAAE,CAACxB,WAAW,EAAEC,eAAe,CAAC,CAAC;EAElC,MAAM2B,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAAC1B,UAAU,EAAE,OAAO,KAAK;IAE7B,IAAI;MACFmB,YAAY,CAACQ,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE3B,UAAU,EAAE;MAAK,CAAC,CAAC,CAAC;MACrD,MAAM4B,QAAQ,GAAG,MAAMrC,eAAe,CAACsC,eAAe,CAAC7B,UAAU,CAAC;MAClEiB,kBAAkB,CAACW,QAAQ,CAACE,IAAI,CAAC;MACjCN,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,QAAQ,CAACE,IAAI,CAAC;MAC/C,OAAO,IAAI;IACb,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZZ,YAAY,CAACQ,IAAI,KAAK;QACpB,GAAGA,IAAI;QACP3B,UAAU,EAAE,UAAU+B,GAAG,CAACC,OAAO,iBAAiBhC,UAAU;MAC9D,CAAC,CAAC,CAAC;MACHiB,kBAAkB,CAAC,IAAI,CAAC;MACxB,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAAC/B,MAAM,EAAE,OAAO,KAAK;IAEzB,IAAI;MACFiB,YAAY,CAACQ,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEzB,MAAM,EAAE;MAAK,CAAC,CAAC,CAAC;MACjD,MAAM0B,QAAQ,GAAG,MAAMpC,WAAW,CAAC0C,WAAW,CAAChC,MAAM,CAAC;MACtDa,cAAc,CAACa,QAAQ,CAACE,IAAI,CAAC;MAC7BN,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,QAAQ,CAACE,IAAI,CAAC;MAC3C,OAAO,IAAI;IACb,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZZ,YAAY,CAACQ,IAAI,KAAK;QACpB,GAAGA,IAAI;QACPzB,MAAM,EAAE,UAAU6B,GAAG,CAACC,OAAO,aAAa9B,MAAM;MAClD,CAAC,CAAC,CAAC;MACHa,cAAc,CAAC,IAAI,CAAC;MACpB,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMoB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBxB,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IACdF,SAAS,CAAC,IAAI,CAAC;IACfU,YAAY,CAAC,CAAC,CAAC,CAAC;;IAEhB;IACA,MAAMmB,eAAe,GAAG,MAAMZ,kBAAkB,CAAC,CAAC;IAClD,MAAMa,WAAW,GAAG,MAAMN,cAAc,CAAC,CAAC;IAE1C,IAAI,CAACK,eAAe,IAAI,CAACC,WAAW,EAAE;MACpC1B,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAI;MACF;MACA,MAAM2B,OAAO,GAAG;QACdlB,EAAE,EAAEtB,UAAU;QACdyC,QAAQ,EAAEvC,MAAM;QAChBE,IAAI,EAAEA,IAAI;QACVE,KAAK,EAAEA,KAAK,IAAI;MAClB,CAAC;MAEDkB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEe,OAAO,CAAC;MAC5ChB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;QAC1BzB,UAAU,EAAE;UACV0C,KAAK,EAAE1C,UAAU;UACjB2C,IAAI,EAAE,OAAO3C,UAAU;UACvB4C,QAAQ,EAAEC,MAAM,CAAC7C,UAAU,CAAC;UAC5B8C,KAAK,EAAEA,KAAK,CAACD,MAAM,CAAC7C,UAAU,CAAC;QACjC,CAAC;QACDE,MAAM,EAAE;UACNwC,KAAK,EAAExC,MAAM;UACbyC,IAAI,EAAE,OAAOzC,MAAM;UACnB0C,QAAQ,EAAEC,MAAM,CAAC3C,MAAM,CAAC;UACxB4C,KAAK,EAAEA,KAAK,CAACD,MAAM,CAAC3C,MAAM,CAAC;QAC7B;MACF,CAAC,CAAC;MAEF,MAAM0B,QAAQ,GAAG,MAAMmB,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,OAAO;MAC9B,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACyB,EAAE,EAAE;QAChB,IAAIC,SAAS,GAAG,MAAM1B,QAAQ,CAACxB,IAAI,CAAC,CAAC;QACrC,IAAI;UACF;UACA,MAAMmD,SAAS,GAAGJ,IAAI,CAACK,KAAK,CAACF,SAAS,CAAC;UACvCA,SAAS,GAAGH,IAAI,CAACC,SAAS,CAACG,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QAChD,CAAC,CAAC,OAAOnB,CAAC,EAAE;UACV;QAAA;QAEF,MAAM,IAAIqB,KAAK,CAAC,yBAAyB7B,QAAQ,CAAC8B,MAAM,KAAKJ,SAAS,EAAE,CAAC;MAC3E;MAEA,MAAMxB,IAAI,GAAG,MAAMF,QAAQ,CAAC+B,IAAI,CAAC,CAAC;MAClClD,SAAS,CAACqB,IAAI,CAAC;MACfN,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEK,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZpB,QAAQ,CAACoB,GAAG,CAACC,OAAO,CAAC;MACrBR,OAAO,CAACd,KAAK,CAAC,QAAQ,EAAEqB,GAAG,CAAC;IAC9B,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM+C,iBAAiB,GAAG,MAAOxB,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBxB,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IACdF,SAAS,CAAC,IAAI,CAAC;IACfU,YAAY,CAAC,CAAC,CAAC,CAAC;;IAEhB;IACA,MAAMmB,eAAe,GAAG,MAAMZ,kBAAkB,CAAC,CAAC;IAClD,MAAMa,WAAW,GAAG,MAAMN,cAAc,CAAC,CAAC;IAE1C,IAAI,CAACK,eAAe,IAAI,CAACC,WAAW,EAAE;MACpC1B,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAI;MACFW,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE;QAC9CvB,MAAM;QACNF,UAAU;QACVI,IAAI;QACJE;MACF,CAAC,CAAC;;MAEF;MACA,MAAMsB,QAAQ,GAAG,MAAMtC,aAAa,CAACuE,YAAY,CAAC3D,MAAM,EAAEF,UAAU,EAAEI,IAAI,EAAEE,KAAK,CAAC;MAClFG,SAAS,CAACmB,QAAQ,CAACE,IAAI,CAAC;MACxBN,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEG,QAAQ,CAACE,IAAI,CAAC;IACxC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZpB,QAAQ,CAACoB,GAAG,CAACC,OAAO,CAAC;MACrBR,OAAO,CAACd,KAAK,CAAC,QAAQ,EAAEqB,GAAG,CAAC;IAC9B,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiD,WAAW,GAAG,MAAO1B,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBxB,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IACdF,SAAS,CAAC,IAAI,CAAC;IACfY,cAAc,CAAC,IAAI,CAAC;IAEpB,IAAI;MACF,MAAMmB,OAAO,GAAG;QACdlB,EAAE,EAAEtB,UAAU;QACdyC,QAAQ,EAAEvC,MAAM;QAChBE,IAAI,EAAEA,IAAI;QACVE,KAAK,EAAEA,KAAK,IAAI;MAClB,CAAC;MAEDkB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEe,OAAO,CAAC;MAE9C,MAAMZ,QAAQ,GAAG,MAAMmB,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,OAAO;MAC9B,CAAC,CAAC;MAEF,MAAMV,IAAI,GAAG,MAAMF,QAAQ,CAAC+B,IAAI,CAAC,CAAC;MAClCtC,cAAc,CAACS,IAAI,CAAC;MACpBN,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEK,IAAI,CAAC;;MAEpC;MACA,MAAMiC,YAAY,GAAG,CAAC,CAAC;MACvB,IAAIjC,IAAI,CAACkC,OAAO,EAAE;QAChBD,YAAY,CAAC/D,UAAU,GAAG8B,IAAI,CAACkC,OAAO;MACxC;MACA,IAAIlC,IAAI,CAACmC,aAAa,EAAE;QACtBF,YAAY,CAAC7D,MAAM,GAAG4B,IAAI,CAACmC,aAAa;MAC1C;MACA,IAAInC,IAAI,CAACoC,SAAS,EAAE;QAClBH,YAAY,CAAC3D,IAAI,GAAG0B,IAAI,CAACoC,SAAS;MACpC;MAEA/C,YAAY,CAAC4C,YAAY,CAAC;IAC5B,CAAC,CAAC,OAAOhC,GAAG,EAAE;MACZpB,QAAQ,CAAC,iBAAiBoB,GAAG,CAACC,OAAO,EAAE,CAAC;MACxCR,OAAO,CAACd,KAAK,CAAC,kBAAkB,EAAEqB,GAAG,CAAC;IACxC,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACElB,OAAA,CAACX,SAAS;IAACmF,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACzBzE,OAAA;MAAAyE,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7B7E,OAAA,CAACR,KAAK;MAACsF,OAAO,EAAC,MAAM;MAAAL,QAAA,EAAC;IAEtB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAEP9D,KAAK,iBAAIf,OAAA,CAACR,KAAK;MAACsF,OAAO,EAAC,QAAQ;MAAAL,QAAA,EAAE1D;IAAK;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChDhE,MAAM,iBAAIb,OAAA,CAACR,KAAK;MAACsF,OAAO,EAAC,SAAS;MAAAL,QAAA,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAExE7E,OAAA,CAACV,IAAI;MAACyF,QAAQ,EAAEvC,YAAa;MAAAiC,QAAA,gBAC3BzE,OAAA,CAACV,IAAI,CAAC0F,KAAK;QAACR,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAC1BzE,OAAA,CAACV,IAAI,CAAC2F,KAAK;UAAAR,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACpC7E,OAAA,CAACV,IAAI,CAAC4F,OAAO;UACXlC,IAAI,EAAC,MAAM;UACXD,KAAK,EAAE1C,UAAW;UAClB8E,QAAQ,EAAG1C,CAAC,IAAKnC,aAAa,CAACmC,CAAC,CAAC2C,MAAM,CAACrC,KAAK,CAAE;UAC/CsC,WAAW,EAAC,mBAAmB;UAC/BC,SAAS,EAAE,CAAC,CAAC/D,SAAS,CAAClB,UAAW;UAClCkF,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,EACDtD,SAAS,CAAClB,UAAU,iBACnBL,OAAA,CAACV,IAAI,CAAC4F,OAAO,CAACM,QAAQ;UAACxC,IAAI,EAAC,SAAS;UAAAyB,QAAA,EAClClD,SAAS,CAAClB;QAAU;UAAAqE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACxB,EACAxD,eAAe,iBACdrB,OAAA,CAACR,KAAK;UAACsF,OAAO,EAAC,SAAS;UAACN,SAAS,EAAC,MAAM;UAAAC,QAAA,GAAC,kBACxB,EAACpD,eAAe,CAACoE,KAAK;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CACR,eACD7E,OAAA,CAACT,MAAM;UACLuF,OAAO,EAAC,mBAAmB;UAC3BY,IAAI,EAAC,IAAI;UACTlB,SAAS,EAAC,MAAM;UAChBmB,OAAO,EAAE5D,kBAAmB;UAAA0C,QAAA,EAC7B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEb7E,OAAA,CAACV,IAAI,CAAC0F,KAAK;QAACR,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAC1BzE,OAAA,CAACV,IAAI,CAAC2F,KAAK;UAAAR,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAChC7E,OAAA,CAACV,IAAI,CAAC4F,OAAO;UACXlC,IAAI,EAAC,MAAM;UACXD,KAAK,EAAExC,MAAO;UACd4E,QAAQ,EAAG1C,CAAC,IAAKjC,SAAS,CAACiC,CAAC,CAAC2C,MAAM,CAACrC,KAAK,CAAE;UAC3CsC,WAAW,EAAC,eAAe;UAC3BC,SAAS,EAAE,CAAC,CAAC/D,SAAS,CAAChB,MAAO;UAC9BgF,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,EACDtD,SAAS,CAAChB,MAAM,iBACfP,OAAA,CAACV,IAAI,CAAC4F,OAAO,CAACM,QAAQ;UAACxC,IAAI,EAAC,SAAS;UAAAyB,QAAA,EAClClD,SAAS,CAAChB;QAAM;UAAAmE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CACxB,EACA1D,WAAW,iBACVnB,OAAA,CAACR,KAAK;UAACsF,OAAO,EAAC,SAAS;UAACN,SAAS,EAAC,MAAM;UAAAC,QAAA,GAAC,cAC5B,EAACtD,WAAW,CAACyE,QAAQ;QAAA;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CACR,eACD7E,OAAA,CAACT,MAAM;UACLuF,OAAO,EAAC,mBAAmB;UAC3BY,IAAI,EAAC,IAAI;UACTlB,SAAS,EAAC,MAAM;UAChBmB,OAAO,EAAErD,cAAe;UAAAmC,QAAA,EACzB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEb7E,OAAA,CAACV,IAAI,CAAC0F,KAAK;QAACR,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAC1BzE,OAAA,CAACV,IAAI,CAAC2F,KAAK;UAAAR,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACpC7E,OAAA,CAACV,IAAI,CAAC4F,OAAO;UACXW,EAAE,EAAC,UAAU;UACbC,IAAI,EAAE,CAAE;UACR/C,KAAK,EAAEtC,IAAK;UACZ0E,QAAQ,EAAG1C,CAAC,IAAK/B,OAAO,CAAC+B,CAAC,CAAC2C,MAAM,CAACrC,KAAK,CAAE;UACzCsC,WAAW,EAAC,mBAAmB;UAC/BC,SAAS,EAAE,CAAC,CAAC/D,SAAS,CAACd,IAAK;UAC5B8E,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,EACDtD,SAAS,CAACd,IAAI,iBACbT,OAAA,CAACV,IAAI,CAAC4F,OAAO,CAACM,QAAQ;UAACxC,IAAI,EAAC,SAAS;UAAAyB,QAAA,EAClClD,SAAS,CAACd;QAAI;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CACxB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,eAEb7E,OAAA,CAACV,IAAI,CAAC0F,KAAK;QAACR,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAC1BzE,OAAA,CAACV,IAAI,CAAC2F,KAAK;UAAAR,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACzC7E,OAAA,CAACV,IAAI,CAAC4F,OAAO;UACXlC,IAAI,EAAC,MAAM;UACXD,KAAK,EAAEpC,KAAM;UACbwE,QAAQ,EAAG1C,CAAC,IAAK7B,QAAQ,CAAC6B,CAAC,CAAC2C,MAAM,CAACrC,KAAK,CAAE;UAC1CsC,WAAW,EAAC;QAAiB;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eAEb7E,OAAA;QAAKwE,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBzE,OAAA,CAACT,MAAM;UACLuF,OAAO,EAAC,SAAS;UACjB9B,IAAI,EAAC,QAAQ;UACb+C,QAAQ,EAAE9E,OAAQ;UAClBuD,SAAS,EAAC,MAAM;UAAAC,QAAA,EAEfxD,OAAO,GAAG,eAAe,GAAG;QAAiB;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,eAET7E,OAAA,CAACT,MAAM;UACLuF,OAAO,EAAC,WAAW;UACnBa,OAAO,EAAE1B,iBAAkB;UAC3B8B,QAAQ,EAAE9E,OAAQ;UAClBuD,SAAS,EAAC,MAAM;UAAAC,QAAA,EAEfxD,OAAO,GAAG,eAAe,GAAG;QAAmB;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eAET7E,OAAA,CAACT,MAAM;UACLuF,OAAO,EAAC,MAAM;UACda,OAAO,EAAExB,WAAY;UACrB4B,QAAQ,EAAE9E,OAAQ;UAAAwD,QAAA,EAEjBxD,OAAO,GAAG,cAAc,GAAG;QAAkB;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EAENhE,MAAM,iBACLb,OAAA;MAAKwE,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBzE,OAAA;QAAAyE,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB7E,OAAA;QAAKwE,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAEjB,IAAI,CAACC,SAAS,CAAC5C,MAAM,EAAE,IAAI,EAAE,CAAC;MAAC;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CACN,eAED7E,OAAA;MAAKwE,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBzE,OAAA;QAAAyE,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB7E,OAAA,CAACP,IAAI;QAAC+E,SAAS,EAAC,MAAM;QAAAC,QAAA,eACpBzE,OAAA,CAACP,IAAI,CAACuG,IAAI;UAAAvB,QAAA,EACPrE,eAAe,gBACdJ,OAAA;YAAAyE,QAAA,gBACEzE,OAAA;cAAAyE,QAAA,gBAAGzE,OAAA;gBAAAyE,QAAA,EAAQ;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC,CAAA1E,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEwB,EAAE,MAAIxB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEI,MAAM;YAAA;cAAAmE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzE7E,OAAA;cAAAyE,QAAA,gBAAGzE,OAAA;gBAAAyE,QAAA,EAAQ;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC1E,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEyF,QAAQ;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzD7E,OAAA;cAAKwE,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAAEjB,IAAI,CAACC,SAAS,CAACtD,WAAW,EAAE,IAAI,EAAE,CAAC;YAAC;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9E,CAAC,gBAEN7E,OAAA;YAAAyE,QAAA,EAAG;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QACxB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EAELpD,WAAW,iBACVzB,OAAA;MAAKwE,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBzE,OAAA;QAAAyE,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB7E,OAAA,CAACR,KAAK;QAACsF,OAAO,EAAErD,WAAW,CAACwE,YAAY,GAAG,SAAS,GAAG,QAAS;QAAAxB,QAAA,EAC7DhD,WAAW,CAACwE,YAAY,GACrB,sDAAsD,GACtD;MAAoD;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACR7E,OAAA;QAAKwE,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAEjB,IAAI,CAACC,SAAS,CAAChC,WAAW,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9E,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAAC3E,EAAA,CAnYID,cAAc;AAAAiG,EAAA,GAAdjG,cAAc;AAqYpB,eAAeA,cAAc;AAAC,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}