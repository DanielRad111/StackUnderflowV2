{"ast":null,"code":"var _jsxFileName = \"/Users/danielrad/Desktop/QZ/Coding/Facultate/PS/StackUnderflow/frontend/src/pages/QuestionDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom';\nimport { Container, Row, Col, Card, Badge, Button, Form, Alert } from 'react-bootstrap';\nimport { questionService, answerService, voteService } from '../services/api';\nimport { AuthContext } from '../services/AuthContext';\nimport AnswerItem from '../components/AnswerItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionDetailPage = () => {\n  _s();\n  var _question$author;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    currentUser,\n    isAuthenticated\n  } = useContext(AuthContext);\n  const [question, setQuestion] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [answerText, setAnswerText] = useState('');\n  const [answerCode, setAnswerCode] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [answerError, setAnswerError] = useState('');\n  const loadQuestionData = async () => {\n    try {\n      if (!id) {\n        setError(\"Question ID is missing. Please check the URL.\");\n        setLoading(false);\n        return;\n      }\n\n      // Validate id to prevent issues with 'undefined' or other invalid values\n      if (id === 'undefined' || id === 'null') {\n        setError(\"Invalid question ID format. Please check the URL.\");\n        setLoading(false);\n        return;\n      }\n      const response = await questionService.getQuestionById(id);\n      if (response && response.data) {\n        // Make sure both id and questionId exist on the question object\n        const questionData = response.data;\n        if (questionData.questionId && !questionData.id) {\n          questionData.id = questionData.questionId;\n        } else if (questionData.id && !questionData.questionId) {\n          questionData.questionId = questionData.id;\n        }\n        setQuestion(questionData);\n        setError(null);\n      } else {\n        setError(\"Failed to load question details: Missing data\");\n      }\n    } catch (err) {\n      console.error(\"Error loading question:\", err);\n      setError(err.message || 'Failed to load question details. Please try again later.');\n      setLoading(false);\n    }\n  };\n  const loadAnswersData = async () => {\n    try {\n      // First try to use the question ID from the loaded question\n      let questionId = question ? question.questionId || question.id : null;\n\n      // Fall back to URL param if necessary\n      if (!questionId && id) {\n        questionId = id;\n      }\n      if (!questionId) {\n        return;\n      }\n\n      // Validate questionId before making API call\n      if (questionId === 'undefined' || questionId === 'null') {\n        console.error(\"Invalid question ID for loading answers\");\n        setError(\"Invalid question ID. Please return to the questions page.\");\n        return;\n      }\n      const response = await answerService.getAnswersByQuestion(questionId);\n      if (response && response.data) {\n        setAnswers(response.data);\n      }\n    } catch (err) {\n      console.error(\"Error loading answers:\", err);\n      // Not setting an error here so at least the question displays\n    }\n  };\n  useEffect(() => {\n    if (!id) {\n      setError(\"Question ID is missing. Please check the URL.\");\n      setLoading(false);\n      return;\n    }\n    const loadData = async () => {\n      setLoading(true);\n      await loadQuestionData();\n      await loadAnswersData();\n      setLoading(false);\n    };\n    loadData();\n  }, [id]);\n  const handleVote = async voteType => {\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n    if (!question) {\n      return;\n    }\n\n    // Get the question ID from the loaded question data\n    const questionId = question.questionId || question.id;\n    if (!questionId) {\n      return;\n    }\n\n    // Get user ID, handling both property names\n    const userId = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) || (currentUser === null || currentUser === void 0 ? void 0 : currentUser.userId);\n    if (!userId) {\n      return;\n    }\n    try {\n      await voteService.voteQuestion(userId, questionId, voteType);\n      loadQuestionData(); // Reload question to update vote count\n    } catch (error) {\n      // Silently handle error\n    }\n  };\n  const handleSubmitAnswer = async e => {\n    e.preventDefault();\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n    if (!answerText.trim()) {\n      setAnswerError('Answer text is required');\n      return;\n    }\n    if (!question) {\n      setAnswerError('Cannot submit answer: Question data is missing');\n      return;\n    }\n\n    // Get the question ID from the loaded question data, not from URL params\n    const questionId = question.questionId || question.id;\n    if (!questionId) {\n      setAnswerError('Cannot submit answer due to missing question ID');\n      return;\n    }\n\n    // Get user ID, handling both property names\n    const userId = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) || (currentUser === null || currentUser === void 0 ? void 0 : currentUser.userId);\n    if (!currentUser || !userId) {\n      setAnswerError('Cannot submit answer: User information is missing');\n      return;\n    }\n    setSubmitting(true);\n    setAnswerError('');\n    try {\n      // Submit the answer\n      await answerService.createAnswer(userId, questionId, answerText.trim(), answerCode || \"\");\n      setAnswerText('');\n      setAnswerCode('');\n      await loadAnswersData(); // Reload answers to show the new one\n    } catch (err) {\n      let errorMessage = 'Failed to submit your answer. Please try again.';\n\n      // Extract specific error message if available\n      if (err.response && err.response.data) {\n        if (typeof err.response.data === 'string') {\n          errorMessage = `Server error: ${err.response.data}`;\n        } else if (err.response.data.message) {\n          errorMessage = `Server error: ${err.response.data.message}`;\n        } else if (err.response.data.error) {\n          errorMessage = `Server error: ${err.response.data.error}`;\n        }\n      }\n      setAnswerError(errorMessage);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const handleAcceptAnswer = async answerId => {\n    if (!question) {\n      console.error(\"Cannot accept answer: Question data is missing\");\n      return;\n    }\n\n    // Get the question ID from the loaded question data\n    const questionId = question.questionId || question.id;\n    if (!questionId) {\n      console.error(\"Cannot accept answer: Question ID is missing from question data\");\n      return;\n    }\n\n    // Validate IDs before making API call\n    if (questionId === 'undefined' || answerId === 'undefined') {\n      console.error(\"Invalid IDs for accepting answer\");\n      return;\n    }\n    try {\n      await questionService.acceptAnswer(questionId, answerId);\n      await loadQuestionData();\n      await loadAnswersData();\n    } catch (error) {\n      console.error(\"Error accepting answer:\", error);\n      setError(`Failed to accept answer: ${error.message || 'Unknown error'}`);\n      setTimeout(() => setError(null), 5000); // Clear error after 5 seconds\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-5 text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 12\n    }, this);\n  }\n  if (error || !question) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-5\",\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error || 'Question not found'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/', {\n            replace: true\n          }),\n          variant: \"primary\",\n          children: \"Return to Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"py-4\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"text-decoration-none mb-3 d-inline-block\",\n          children: \"\\u2190 Back to All Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  size: \"sm\",\n                  onClick: () => handleVote('UP'),\n                  disabled: !isAuthenticated,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-caret-up-fill\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"vote-count\",\n                  children: question.votes || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  size: \"sm\",\n                  onClick: () => handleVote('DOWN'),\n                  disabled: !isAuthenticated,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-caret-down-fill\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-grow-1\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"mb-3\",\n                  children: question.title || \"Untitled Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: question.text || \"No description provided\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this), question.image && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: question.image,\n                    alt: \"Question attachment\",\n                    className: \"img-fluid\",\n                    style: {\n                      maxHeight: '300px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-3\",\n                  children: question.tags && typeof question.tags === 'string' ? question.tags.split(',').map((tag, index) => /*#__PURE__*/_jsxDEV(Badge, {\n                    as: Link,\n                    to: `/tags/${tag.trim()}`,\n                    bg: \"secondary\",\n                    className: \"tag-badge text-decoration-none\",\n                    children: tag.trim()\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 25\n                  }, this)) : question.tagList && Array.isArray(question.tagList) ? question.tagList.map((tag, index) => /*#__PURE__*/_jsxDEV(Badge, {\n                    as: Link,\n                    to: `/tags/${typeof tag === 'string' ? tag : tag.name}`,\n                    bg: \"secondary\",\n                    className: \"tag-badge text-decoration-none\",\n                    children: typeof tag === 'string' ? tag : tag.name\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 25\n                  }, this)) : question.tags && Array.isArray(question.tags) ? question.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(Badge, {\n                    as: Link,\n                    to: `/tags/${typeof tag === 'string' ? tag : tag.name}`,\n                    bg: \"secondary\",\n                    className: \"tag-badge text-decoration-none\",\n                    children: typeof tag === 'string' ? tag : tag.name\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 25\n                  }, this)) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center mt-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: isAuthenticated && currentUser.id === (question.authorId || ((_question$author = question.author) === null || _question$author === void 0 ? void 0 : _question$author.id)) && /*#__PURE__*/_jsxDEV(Button, {\n                      as: Link,\n                      to: `/questions/edit/${question.questionId || question.id}`,\n                      variant: \"outline-secondary\",\n                      size: \"sm\",\n                      className: \"me-2\",\n                      children: \"Edit Question\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"user-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-muted me-2\",\n                      children: [\"asked \", question.createdAt ? new Date(question.createdAt).toLocaleDateString() : \"unknown date\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/users/${question.authorId}`,\n                      className: \"text-decoration-none\",\n                      children: question.authorName || question.authorUsername || 'User'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mb-3\",\n          children: [answers.length, \" \", answers.length === 1 ? 'Answer' : 'Answers']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), answers.map(answer => /*#__PURE__*/_jsxDEV(AnswerItem, {\n          answer: answer,\n          isAccepted: question.acceptedAnswerId === answer.id,\n          onAccept: handleAcceptAnswer,\n          questionAuthorId: question.authorId,\n          questionHasAcceptedAnswer: !!question.acceptedAnswerId\n        }, answer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Your Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), !isAuthenticated ? /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"You must be logged in to answer questions.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                as: Link,\n                to: \"/login\",\n                variant: \"primary\",\n                children: \"Log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mx-2\",\n                children: \"or\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                as: Link,\n                to: \"/register\",\n                variant: \"outline-primary\",\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmitAnswer,\n            children: [answerError && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: answerError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"answerText\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Answer Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 6,\n                value: answerText,\n                onChange: e => setAnswerText(e.target.value),\n                placeholder: \"Write your answer here...\",\n                disabled: submitting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"answerCode\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Code (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 4,\n                value: answerCode,\n                onChange: e => setAnswerCode(e.target.value),\n                placeholder: \"Add code if relevant to your answer...\",\n                disabled: submitting,\n                className: \"font-monospace\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              disabled: submitting,\n              children: submitting ? 'Submitting...' : 'Post Your Answer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionDetailPage, \"H4oflhTUmF9sKf312KO5xqhWclc=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = QuestionDetailPage;\nexport default QuestionDetailPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","Link","useNavigate","useLocation","Container","Row","Col","Card","Badge","Button","Form","Alert","questionService","answerService","voteService","AuthContext","AnswerItem","jsxDEV","_jsxDEV","QuestionDetailPage","_s","_question$author","id","navigate","location","currentUser","isAuthenticated","question","setQuestion","answers","setAnswers","loading","setLoading","error","setError","answerText","setAnswerText","answerCode","setAnswerCode","submitting","setSubmitting","answerError","setAnswerError","loadQuestionData","response","getQuestionById","data","questionData","questionId","err","console","message","loadAnswersData","getAnswersByQuestion","loadData","handleVote","voteType","userId","voteQuestion","handleSubmitAnswer","e","preventDefault","trim","createAnswer","errorMessage","handleAcceptAnswer","answerId","acceptAnswer","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","replace","to","Body","size","disabled","votes","Title","title","Text","text","image","src","alt","style","maxHeight","tags","split","map","tag","index","as","bg","tagList","Array","isArray","name","authorId","author","createdAt","Date","toLocaleDateString","authorName","authorUsername","length","answer","isAccepted","acceptedAnswerId","onAccept","questionAuthorId","questionHasAcceptedAnswer","onSubmit","Group","controlId","Label","Control","rows","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/danielrad/Desktop/QZ/Coding/Facultate/PS/StackUnderflow/frontend/src/pages/QuestionDetailPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom';\nimport { Container, Row, Col, Card, Badge, Button, Form, Alert } from 'react-bootstrap';\nimport { questionService, answerService, voteService } from '../services/api';\nimport { AuthContext } from '../services/AuthContext';\nimport AnswerItem from '../components/AnswerItem';\n\nconst QuestionDetailPage = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { currentUser, isAuthenticated } = useContext(AuthContext);\n  \n  const [question, setQuestion] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  const [answerText, setAnswerText] = useState('');\n  const [answerCode, setAnswerCode] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [answerError, setAnswerError] = useState('');\n\n  const loadQuestionData = async () => {\n    try {\n      if (!id) {\n        setError(\"Question ID is missing. Please check the URL.\");\n        setLoading(false);\n        return;\n      }\n\n      // Validate id to prevent issues with 'undefined' or other invalid values\n      if (id === 'undefined' || id === 'null') {\n        setError(\"Invalid question ID format. Please check the URL.\");\n        setLoading(false);\n        return;\n      }\n      \n      const response = await questionService.getQuestionById(id);\n      \n      if (response && response.data) {\n        // Make sure both id and questionId exist on the question object\n        const questionData = response.data;\n        if (questionData.questionId && !questionData.id) {\n          questionData.id = questionData.questionId;\n        } else if (questionData.id && !questionData.questionId) {\n          questionData.questionId = questionData.id;\n        }\n        \n        setQuestion(questionData);\n        setError(null);\n      } else {\n        setError(\"Failed to load question details: Missing data\");\n      }\n    } catch (err) {\n      console.error(\"Error loading question:\", err);\n      setError(err.message || 'Failed to load question details. Please try again later.');\n      setLoading(false);\n    }\n  };\n\n  const loadAnswersData = async () => {\n    try {\n      // First try to use the question ID from the loaded question\n      let questionId = question ? (question.questionId || question.id) : null;\n      \n      // Fall back to URL param if necessary\n      if (!questionId && id) {\n        questionId = id;\n      }\n      \n      if (!questionId) {\n        return;\n      }\n      \n      // Validate questionId before making API call\n      if (questionId === 'undefined' || questionId === 'null') {\n        console.error(\"Invalid question ID for loading answers\");\n        setError(\"Invalid question ID. Please return to the questions page.\");\n        return;\n      }\n      \n      const response = await answerService.getAnswersByQuestion(questionId);\n      \n      if (response && response.data) {\n        setAnswers(response.data);\n      }\n    } catch (err) {\n      console.error(\"Error loading answers:\", err);\n      // Not setting an error here so at least the question displays\n    }\n  };\n\n  useEffect(() => {\n    if (!id) {\n      setError(\"Question ID is missing. Please check the URL.\");\n      setLoading(false);\n      return;\n    }\n    \n    const loadData = async () => {\n      setLoading(true);\n      await loadQuestionData();\n      await loadAnswersData();\n      setLoading(false);\n    };\n\n    loadData();\n  }, [id]);\n\n  const handleVote = async (voteType) => {\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n\n    if (!question) {\n      return;\n    }\n    \n    // Get the question ID from the loaded question data\n    const questionId = question.questionId || question.id;\n    \n    if (!questionId) {\n      return;\n    }\n    \n    // Get user ID, handling both property names\n    const userId = currentUser?.id || currentUser?.userId;\n    \n    if (!userId) {\n      return;\n    }\n\n    try {\n      await voteService.voteQuestion(userId, questionId, voteType);\n      loadQuestionData(); // Reload question to update vote count\n    } catch (error) {\n      // Silently handle error\n    }\n  };\n\n  const handleSubmitAnswer = async (e) => {\n    e.preventDefault();\n    \n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n    \n    if (!answerText.trim()) {\n      setAnswerError('Answer text is required');\n      return;\n    }\n    \n    if (!question) {\n      setAnswerError('Cannot submit answer: Question data is missing');\n      return;\n    }\n    \n    // Get the question ID from the loaded question data, not from URL params\n    const questionId = question.questionId || question.id;\n    \n    if (!questionId) {\n      setAnswerError('Cannot submit answer due to missing question ID');\n      return;\n    }\n    \n    // Get user ID, handling both property names\n    const userId = currentUser?.id || currentUser?.userId;\n    \n    if (!currentUser || !userId) {\n      setAnswerError('Cannot submit answer: User information is missing');\n      return;\n    }\n    \n    setSubmitting(true);\n    setAnswerError('');\n    \n    try {\n      // Submit the answer\n      await answerService.createAnswer(\n        userId,\n        questionId,\n        answerText.trim(), \n        answerCode || \"\"\n      );\n      \n      setAnswerText('');\n      setAnswerCode('');\n      await loadAnswersData(); // Reload answers to show the new one\n    } catch (err) {\n      let errorMessage = 'Failed to submit your answer. Please try again.';\n      \n      // Extract specific error message if available\n      if (err.response && err.response.data) {\n        if (typeof err.response.data === 'string') {\n          errorMessage = `Server error: ${err.response.data}`;\n        } else if (err.response.data.message) {\n          errorMessage = `Server error: ${err.response.data.message}`;\n        } else if (err.response.data.error) {\n          errorMessage = `Server error: ${err.response.data.error}`;\n        }\n      }\n      \n      setAnswerError(errorMessage);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleAcceptAnswer = async (answerId) => {\n    if (!question) {\n      console.error(\"Cannot accept answer: Question data is missing\");\n      return;\n    }\n    \n    // Get the question ID from the loaded question data\n    const questionId = question.questionId || question.id;\n    \n    if (!questionId) {\n      console.error(\"Cannot accept answer: Question ID is missing from question data\");\n      return;\n    }\n\n    // Validate IDs before making API call\n    if (questionId === 'undefined' || answerId === 'undefined') {\n      console.error(\"Invalid IDs for accepting answer\");\n      return;\n    }\n    \n    try {\n      await questionService.acceptAnswer(questionId, answerId);\n      await loadQuestionData();\n      await loadAnswersData();\n    } catch (error) {\n      console.error(\"Error accepting answer:\", error);\n      setError(`Failed to accept answer: ${error.message || 'Unknown error'}`);\n      setTimeout(() => setError(null), 5000); // Clear error after 5 seconds\n    }\n  };\n\n  if (loading) {\n    return <Container className=\"py-5 text-center\">Loading...</Container>;\n  }\n\n  if (error || !question) {\n    return (\n      <Container className=\"py-5\">\n        <Alert variant=\"danger\">{error || 'Question not found'}</Alert>\n        <div className=\"text-center mt-3\">\n          <Button \n            onClick={() => navigate('/', { replace: true })} \n            variant=\"primary\"\n          >\n            Return to Questions\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n\n  return (\n    <Container className=\"py-4\">\n      <Row>\n        <Col>\n          <Link to=\"/\" className=\"text-decoration-none mb-3 d-inline-block\">\n            &larr; Back to All Questions\n          </Link>\n          \n          <Card className=\"mb-4\">\n            <Card.Body>\n              <div className=\"d-flex\">\n                <div className=\"vote-buttons\">\n                  <Button \n                    variant=\"outline-secondary\" \n                    size=\"sm\"\n                    onClick={() => handleVote('UP')}\n                    disabled={!isAuthenticated}\n                  >\n                    <i className=\"bi bi-caret-up-fill\"></i>\n                  </Button>\n                  <div className=\"vote-count\">{question.votes || 0}</div>\n                  <Button \n                    variant=\"outline-secondary\" \n                    size=\"sm\"\n                    onClick={() => handleVote('DOWN')}\n                    disabled={!isAuthenticated}\n                  >\n                    <i className=\"bi bi-caret-down-fill\"></i>\n                  </Button>\n                </div>\n                \n                <div className=\"flex-grow-1\">\n                  <Card.Title className=\"mb-3\">{question.title || \"Untitled Question\"}</Card.Title>\n                  <Card.Text>{question.text || \"No description provided\"}</Card.Text>\n                  \n                  {question.image && (\n                    <div className=\"mb-3\">\n                      <img \n                        src={question.image} \n                        alt=\"Question attachment\" \n                        className=\"img-fluid\"\n                        style={{ maxHeight: '300px' }}\n                      />\n                    </div>\n                  )}\n                  \n                  <div className=\"mt-3\">\n                    {question.tags && typeof question.tags === 'string' ? (\n                      question.tags.split(',').map((tag, index) => (\n                        <Badge\n                          as={Link}\n                          to={`/tags/${tag.trim()}`}\n                          bg=\"secondary\"\n                          className=\"tag-badge text-decoration-none\"\n                          key={index}\n                        >\n                          {tag.trim()}\n                        </Badge>\n                      ))\n                    ) : question.tagList && Array.isArray(question.tagList) ? (\n                      question.tagList.map((tag, index) => (\n                        <Badge\n                          as={Link}\n                          to={`/tags/${typeof tag === 'string' ? tag : tag.name}`}\n                          bg=\"secondary\"\n                          className=\"tag-badge text-decoration-none\"\n                          key={index}\n                        >\n                          {typeof tag === 'string' ? tag : tag.name}\n                        </Badge>\n                      ))\n                    ) : question.tags && Array.isArray(question.tags) ? (\n                      question.tags.map((tag, index) => (\n                        <Badge\n                          as={Link}\n                          to={`/tags/${typeof tag === 'string' ? tag : tag.name}`}\n                          bg=\"secondary\"\n                          className=\"tag-badge text-decoration-none\"\n                          key={index}\n                        >\n                          {typeof tag === 'string' ? tag : tag.name}\n                        </Badge>\n                      ))\n                    ) : null}\n                  </div>\n                  \n                  <div className=\"d-flex justify-content-between align-items-center mt-4\">\n                    <div>\n                      {isAuthenticated && currentUser.id === (question.authorId || question.author?.id) && (\n                        <Button \n                          as={Link} \n                          to={`/questions/edit/${question.questionId || question.id}`}\n                          variant=\"outline-secondary\"\n                          size=\"sm\"\n                          className=\"me-2\"\n                        >\n                          Edit Question\n                        </Button>\n                      )}\n                    </div>\n                    \n                    <div className=\"user-info\">\n                      <span className=\"text-muted me-2\">\n                        asked {question.createdAt ? new Date(question.createdAt).toLocaleDateString() : \"unknown date\"}\n                      </span>\n                      <Link to={`/users/${question.authorId}`} className=\"text-decoration-none\">\n                        {question.authorName || question.authorUsername || 'User'}\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n          \n          <h4 className=\"mb-3\">\n            {answers.length} {answers.length === 1 ? 'Answer' : 'Answers'}\n          </h4>\n          \n          {answers.map(answer => (\n            <AnswerItem \n              key={answer.id} \n              answer={answer} \n              isAccepted={question.acceptedAnswerId === answer.id}\n              onAccept={handleAcceptAnswer}\n              questionAuthorId={question.authorId}\n              questionHasAcceptedAnswer={!!question.acceptedAnswerId}\n            />\n          ))}\n          \n          <div className=\"mt-5\">\n            <h4>Your Answer</h4>\n            \n            {!isAuthenticated ? (\n              <Card className=\"mb-4\">\n                <Card.Body className=\"text-center\">\n                  <p>You must be logged in to answer questions.</p>\n                  <Button as={Link} to=\"/login\" variant=\"primary\">Log in</Button>\n                  <span className=\"mx-2\">or</span>\n                  <Button as={Link} to=\"/register\" variant=\"outline-primary\">Sign up</Button>\n                </Card.Body>\n              </Card>\n            ) : (\n              <Form onSubmit={handleSubmitAnswer}>\n                {answerError && <Alert variant=\"danger\">{answerError}</Alert>}\n                \n                <Form.Group className=\"mb-3\" controlId=\"answerText\">\n                  <Form.Label>Answer Text</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows={6}\n                    value={answerText}\n                    onChange={(e) => setAnswerText(e.target.value)}\n                    placeholder=\"Write your answer here...\"\n                    disabled={submitting}\n                  />\n                </Form.Group>\n                \n                <Form.Group className=\"mb-3\" controlId=\"answerCode\">\n                  <Form.Label>Code (Optional)</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows={4}\n                    value={answerCode}\n                    onChange={(e) => setAnswerCode(e.target.value)}\n                    placeholder=\"Add code if relevant to your answer...\"\n                    disabled={submitting}\n                    className=\"font-monospace\"\n                  />\n                </Form.Group>\n                \n                <Button variant=\"primary\" type=\"submit\" disabled={submitting}>\n                  {submitting ? 'Submitting...' : 'Post Your Answer'}\n                </Button>\n              </Form>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default QuestionDetailPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}